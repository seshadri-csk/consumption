import java.util.regex.Pattern;

public class SQLInjectionValidator {
    // Regular expression to detect SQL injection patterns
    private static final String SQL_INJECTION_PATTERN = ".*(\\b(SELECT|INSERT|UPDATE|DELETE|DROP|UNION|WHERE|OR|AND|LIKE|CAST|CONVERT|EXEC|EXECUTE|FROM|HAVING|JOIN|NULL|TRUE|FALSE|IS|IN)\\b|\\b--\\b|\\b\\*\\b|\\b;\\b|\\b\\'\\b|\\b\\\"\\b|\\b\\(\\b).*";
    
    private static final Pattern pattern = Pattern.compile(SQL_INJECTION_PATTERN, Pattern.CASE_INSENSITIVE);

    /**
     * Validates the input string for SQL injection patterns.
     *
     * @param input The OData input string to validate.
     * @return true if the input is safe, false if it contains SQL injection patterns.
     */
    public static boolean isValidODataQuery(String input) {
        // Check if the input matches the SQL injection pattern
        return !pattern.matcher(input).matches();
    }

    public static void main(String[] args) {
        String odataQuery = "runmode.sql eq 'production' and time_stamap ge to_date('01/10/2023','MM/DD/YY')";

        // Validate the OData query
        if (isValidODataQuery(odataQuery)) {
            System.out.println("The OData query is valid and safe.");
        } else {
            System.out.println("The OData query contains potential SQL injection patterns.");
        }
    }
}
